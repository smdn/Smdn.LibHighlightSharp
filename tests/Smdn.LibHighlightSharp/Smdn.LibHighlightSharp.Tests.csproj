<!--
SPDX-FileCopyrightText: 2022 smdn <smdn@smdn.jp>
SPDX-License-Identifier: MIT
-->
<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="$(MSBuildThisFileDirectory)..\..\src\Highlight.Build.props" />

  <PropertyGroup>
    <!-- true if on .NET 8.0 or greater -->
    <UseSimplifiedRIDModel Condition="!( $(TargetFramework.StartsWith('net6')) or $(TargetFramework.StartsWith('net7')) )">true</UseSimplifiedRIDModel>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFrameworks Condition=" '$(EnableTargetFrameworkDotNet80)' == 'true' ">net8.0;$(TargetFrameworks)</TargetFrameworks>
    <TargetFrameworks Condition=" '$(EnableTargetFrameworkNetFx)' == 'true' ">$(TargetFrameworks)</TargetFrameworks>
    <!-- specify RID 'linux-x64' on .NET 8.0 or greater -->
    <RuntimeIndentifier Condition="
      '$(IsTargetFrameworkNet8OrGreater)' == 'true' and
      '$([System.Runtime.InteropServices.RuntimeInformation]::RuntimeIdentifier)' == 'linux-x64'
    ">linux-x64</RuntimeIndentifier>
    <RequireToInstallCIRuntimeDependencies>true</RequireToInstallCIRuntimeDependencies>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Smdn.Fundamental.Shell" Version="3.1.0" />
  </ItemGroup>

  <!-- set default value -->
  <PropertyGroup Condition=" '$(SmdnLibHighlightSharpBindingsPackageReferenceVersion)' != '' ">
    <SmdnLibHighlightSharpLangDefsPackageReferenceVersion
      Condition=" '$(SmdnLibHighlightSharpLangDefsPackageReferenceVersion)' == '' "
    >$(SmdnLibHighlightSharpBindingsPackageReferenceVersion)</SmdnLibHighlightSharpLangDefsPackageReferenceVersion>
    <SmdnLibHighlightSharpThemesPackageReferenceVersion
      Condition=" '$(SmdnLibHighlightSharpThemesPackageReferenceVersion)' == '' "
    >$(SmdnLibHighlightSharpBindingsPackageReferenceVersion)</SmdnLibHighlightSharpThemesPackageReferenceVersion>
  </PropertyGroup>

  <!-- set default version for simplified RID environment -->
  <PropertyGroup Condition="
    '$(SmdnLibHighlightSharpBindingsPackageReferenceVersion)' == '' and
    '$(TestReleasedPackage)' == 'true' and
    '$(UseSimplifiedRIDModel)' == 'true'
  ">
    <SmdnLibHighlightSharpBindingsPackageReferenceVersion>4.0.1</SmdnLibHighlightSharpBindingsPackageReferenceVersion>
    <SmdnLibHighlightSharpLangDefsPackageReferenceVersion>4.0.0</SmdnLibHighlightSharpLangDefsPackageReferenceVersion>
    <SmdnLibHighlightSharpThemesPackageReferenceVersion>4.0.0</SmdnLibHighlightSharpThemesPackageReferenceVersion>
  </PropertyGroup>

  <PropertyGroup>
    <SmdnLibHighlightSharpDependencyPackageReferenceStyle>ProjectReference</SmdnLibHighlightSharpDependencyPackageReferenceStyle>
    <SmdnLibHighlightSharpDependencyPackageReferenceStyle
      Condition=" '$(SmdnLibHighlightSharpBindingsPackageReferenceVersion)' != '' "
    >PackageReferenceExplicitVersion</SmdnLibHighlightSharpDependencyPackageReferenceStyle>
    <SmdnLibHighlightSharpDependencyPackageReferenceStyle
      Condition=" '$(SmdnLibHighlightSharpBindingsPackageReferenceVersion)' == '' and '$(TestReleasedPackage)' == 'true' "
    >PackageReferenceImplicitVersion</SmdnLibHighlightSharpDependencyPackageReferenceStyle>
  </PropertyGroup>

  <ItemGroup Condition=" '$(SmdnLibHighlightSharpDependencyPackageReferenceStyle)' == 'PackageReferenceImplicitVersion' ">
    <PackageReference Include="Smdn.LibHighlightSharp.LangDefs" Version="[$(Highlight_MinimumSupportedVersionInclusive),$(Highlight_MaximumSupportedVersionExclusive))" />
    <PackageReference Include="Smdn.LibHighlightSharp.Themes"   Version="[$(Highlight_MinimumSupportedVersionInclusive),$(Highlight_MaximumSupportedVersionExclusive))" />
  </ItemGroup>
  <ItemGroup Condition=" '$(SmdnLibHighlightSharpDependencyPackageReferenceStyle)' == 'PackageReferenceExplicitVersion' ">
    <PackageReference Include="Smdn.LibHighlightSharp.LangDefs" Version="$(SmdnLibHighlightSharpLangDefsPackageReferenceVersion)" />
    <PackageReference Include="Smdn.LibHighlightSharp.Themes"   Version="$(SmdnLibHighlightSharpThemesPackageReferenceVersion)" />
    <PackageReference Include="Smdn.LibHighlightSharp.Bindings" Version="$(SmdnLibHighlightSharpBindingsPackageReferenceVersion)" />
  </ItemGroup>
  <ItemGroup Condition=" '$(SmdnLibHighlightSharpDependencyPackageReferenceStyle)' == 'ProjectReference' ">
    <ProjectReference
      Include="$(MSBuildThisFileDirectory)..\..\src\Smdn.LibHighlightSharp.Bindings\Smdn.LibHighlightSharp.Bindings.csproj"
      AdditionalProperties="IsBuildDueToProjectReference=true;AssemblyVersionForReferenceBySmdnLibHighlightSharp=$(Highlight_MinimumSupportedVersionInclusive)"
    />
    <ProjectReference
      Include="$(MSBuildThisFileDirectory)..\..\src\Smdn.LibHighlightSharp.LangDefs\Smdn.LibHighlightSharp.LangDefs.csproj"
      ReferenceOutputAssembly="false"
      AdditionalProperties="IsBuildDueToProjectReference=true"
    />
    <ProjectReference
      Include="$(MSBuildThisFileDirectory)..\..\src\Smdn.LibHighlightSharp.Themes\Smdn.LibHighlightSharp.Themes.csproj"
      ReferenceOutputAssembly="false"
      AdditionalProperties="IsBuildDueToProjectReference=true"
    />
  </ItemGroup>

  <Target
    Name="PrepareTestConstantsFile"
    BeforeTargets="BeforeBuild"
    Outputs="$(_TestConstantsFilePath)"
    Condition=" '$(TargetFramework)' != '' "
  >
    <PropertyGroup>
      <_SmdnLibHighlightSharpBindingsReferenceVersion>$(Highlight_MinimumSupportedVersionInclusive)</_SmdnLibHighlightSharpBindingsReferenceVersion>
      <_SmdnLibHighlightSharpBindingsReferenceVersion
        Condition=" '$(SmdnLibHighlightSharpDependencyPackageReferenceStyle)' == 'PackageReferenceExplicitVersion' "
      >$(SmdnLibHighlightSharpBindingsPackageReferenceVersion)</_SmdnLibHighlightSharpBindingsReferenceVersion>
    </PropertyGroup>

    <PropertyGroup>
      <_TestConstantsFilePath>$(IntermediateOutputPath)TestConstants.g.cs</_TestConstantsFilePath>
      <_TestConstantsContent><![CDATA[
// This file was automatically generated by $(MSBuildProjectFile).
// Do not edit this file by hand.
internal static class TestConstants {
  public const string ExpectedBindingsReferenceVersionString = "$(Highlight_MinimumSupportedVersionInclusive)"%3B
  public const string ExpectedBindingsVersionString = "$(_SmdnLibHighlightSharpBindingsReferenceVersion)"%3B
}
      ]]></_TestConstantsContent>
    </PropertyGroup>

    <WriteLinesToFile
      File="$(_TestConstantsFilePath)"
      Lines="$(_TestConstantsContent)"
      Overwrite="true"
    />

    <!-- include generated files into the compile target -->
    <ItemGroup>
      <Compile Include="$(_TestConstantsFilePath)" Visible="false" AutoGen="true" />
    </ItemGroup>
  </Target>

</Project>
